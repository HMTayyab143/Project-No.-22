<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net6.0;net48</TargetFrameworks>
    <LangVersion>10.0</LangVersion>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>disable</Nullable>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <ContinuousIntegrationBuild Condition="'$(CI)' == 'True'">true</ContinuousIntegrationBuild>
    <Version>3.0.0</Version>
    <Description>A .Net library to abstract file access to file system and compressed archives. Supports file system, Zip, Rar, Tar, 7Zip, GZip.</Description>
    <Authors>Jérémy Ansel</Authors>
    <Company>Jérémy Ansel</Company>
    <Copyright>Copyright © 2015-2022 Jérémy Ansel</Copyright>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <PackageTags>IO File Archive Zip Rar Tar 7Zip GZip</PackageTags>
    <PackageProjectUrl>https://github.com/JeremyAnsel/JeremyAnsel.IO.Locator</PackageProjectUrl>
  </PropertyGroup>

  <ItemGroup>
    <Using Remove="System.Net.Http" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="6.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Condition="'$(CI)' == 'True'" Include="Microsoft.SourceLink.GitHub" Version="1.1.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="SharpCompress" Version="0.24.0" />
  </ItemGroup>

  <UsingTask TaskName="PostBuildTask" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup />
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        File.SetLastWriteTime(@"$(TargetDir)SharpCompress.dll", DateTime.Now);
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition=" '$(TargetFramework)' == 'net48' ">
    <PostBuildTask />
  </Target>

</Project>
