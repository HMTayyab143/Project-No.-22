{
  "api/JeremyAnsel.IO.DiscLocator.html": {
    "href": "api/JeremyAnsel.IO.DiscLocator.html",
    "title": "Namespace JeremyAnsel.IO.DiscLocator",
    "keywords": "Namespace JeremyAnsel.IO.DiscLocator Classes DiscFileLocatorFactory A factory to create a disc file locator."
  },
  "api/JeremyAnsel.IO.DiscLocator.DiscFileLocatorFactory.html": {
    "href": "api/JeremyAnsel.IO.DiscLocator.DiscFileLocatorFactory.html",
    "title": "Class DiscFileLocatorFactory",
    "keywords": "Class DiscFileLocatorFactory A factory to create a disc file locator. Inheritance Object DiscFileLocatorFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.IO.DiscLocator Assembly : JeremyAnsel.IO.DiscLocator.dll Syntax public static class DiscFileLocatorFactory Remarks The supported formats are: Iso, Udf. Methods | Improve this Doc View Source Create(IFileLocator, String) Creates a disc file locator from a locator. Declaration public static IFileLocator Create(IFileLocator locator, string root) Parameters Type Name Description IFileLocator locator The locator. String root The root path. Returns Type Description IFileLocator A file locator. | Improve this Doc View Source Create(Stream) Creates a disc file locator from a stream. Declaration public static IFileLocator Create(Stream root) Parameters Type Name Description Stream root The stream. Returns Type Description IFileLocator A file locator. | Improve this Doc View Source Create(String) Creates a disc file locator from a file. Declaration public static IFileLocator Create(string root) Parameters Type Name Description String root The root path. Returns Type Description IFileLocator A file locator."
  },
  "api/JeremyAnsel.IO.Locator.FileLocatorFactory.html": {
    "href": "api/JeremyAnsel.IO.Locator.FileLocatorFactory.html",
    "title": "Class FileLocatorFactory",
    "keywords": "Class FileLocatorFactory A factory to create a file locator. Inheritance Object FileLocatorFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.IO.Locator Assembly : JeremyAnsel.IO.Locator.dll Syntax public static class FileLocatorFactory Remarks The supported formats are: file system, Zip, Rar, Tar, 7Zip, GZip. Methods | Improve this Doc View Source Create(IFileLocator, String) Creates a file locator from a file locator. Declaration public static IFileLocator Create(IFileLocator locator, string root) Parameters Type Name Description IFileLocator locator The source file locator. String root The root path. Returns Type Description IFileLocator A file locator. | Improve this Doc View Source Create(Stream) Creates a file locator from a stream. Declaration public static IFileLocator Create(Stream root) Parameters Type Name Description Stream root A stream. Returns Type Description IFileLocator A file locator. | Improve this Doc View Source Create(String) Creates a file locator. Declaration public static IFileLocator Create(string root) Parameters Type Name Description String root The root path. Returns Type Description IFileLocator A file locator."
  },
  "api/JeremyAnsel.IO.Locator.IFileLocator.html": {
    "href": "api/JeremyAnsel.IO.Locator.IFileLocator.html",
    "title": "Interface IFileLocator",
    "keywords": "Interface IFileLocator The file locator interface. Inherited Members IDisposable.Dispose() Namespace : JeremyAnsel.IO.Locator Assembly : JeremyAnsel.IO.Locator.dll Syntax public interface IFileLocator : IDisposable Methods | Improve this Doc View Source EnumerateFiles() Enumerate the files. Declaration IEnumerable<string> EnumerateFiles() Returns Type Description IEnumerable < String > An enumeration. | Improve this Doc View Source EnumerateFiles(String) Enumerate the files. Declaration IEnumerable<string> EnumerateFiles(string root) Parameters Type Name Description String root The root path. Returns Type Description IEnumerable < String > An enumeration. | Improve this Doc View Source Exists(String) Indicates whether the specified path exists. Declaration bool Exists(string path) Parameters Type Name Description String path A path. Returns Type Description Boolean A boolean. | Improve this Doc View Source Open(String) Open a file. Declaration Stream Open(string path) Parameters Type Name Description String path A path. Returns Type Description Stream A stream."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "JeremyAnsel.IO.Locator",
    "keywords": "JeremyAnsel.IO.Locator This is the documentation for JeremyAnsel.IO.Locator."
  },
  "index.html": {
    "href": "index.html",
    "title": "JeremyAnsel.IO.Locator",
    "keywords": "JeremyAnsel.IO.Locator JeremyAnsel.IO.Locator: JeremyAnsel.IO.DiscLocator: JeremyAnsel.IO.Locator is a .Net library to abstract file access to file system, compressed archives and disc images. The supported formats by FileLocatorFactory are: file system, Zip, Rar, Tar, 7Zip, GZip. The supported formats by DiscLocatorFactory are: Iso, Udf."
  },
  "api/JeremyAnsel.IO.Locator.html": {
    "href": "api/JeremyAnsel.IO.Locator.html",
    "title": "Namespace JeremyAnsel.IO.Locator",
    "keywords": "Namespace JeremyAnsel.IO.Locator Classes FileLocatorFactory A factory to create a file locator. MemoryFileLocator An in memory file locator. WritableFileLocatorFactory A factory to create a writable file locator. The supported formats are: file system, Zip, Tar, GZip. Interfaces IFileLocator The file locator interface. IWritableFileLocator The writable file locator interface."
  },
  "api/JeremyAnsel.IO.Locator.MemoryFileLocator.html": {
    "href": "api/JeremyAnsel.IO.Locator.MemoryFileLocator.html",
    "title": "Class MemoryFileLocator",
    "keywords": "Class MemoryFileLocator An in memory file locator. Inheritance Object MemoryFileLocator Implements IFileLocator IWritableFileLocator IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.IO.Locator Assembly : JeremyAnsel.IO.Locator.dll Syntax public sealed class MemoryFileLocator : IFileLocator, IWritableFileLocator, IDisposable Constructors | Improve this Doc View Source MemoryFileLocator() Initializes a new instance of the MemoryFileLocator class. Declaration public MemoryFileLocator() Properties | Improve this Doc View Source IsEmpty Gets a value indicating whether the file locator is empty. Declaration public bool IsEmpty { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Clear() Clears the file locator. Declaration public void Clear() | Improve this Doc View Source Create(String) Create a file. Declaration public void Create(string path) Parameters Type Name Description String path A path. | Improve this Doc View Source Dispose() Immediately releases the unmanaged resources used by the MemoryFileLocator object. Declaration public void Dispose() | Improve this Doc View Source EnumerateFiles() Enumerate the files. Declaration public IEnumerable<string> EnumerateFiles() Returns Type Description IEnumerable < String > An enumeration. | Improve this Doc View Source EnumerateFiles(String) Enumerate the files. Declaration public IEnumerable<string> EnumerateFiles(string root) Parameters Type Name Description String root The root path. Returns Type Description IEnumerable < String > An enumeration. | Improve this Doc View Source Exists(String) Indicates whether the specified path exists. Declaration public bool Exists(string path) Parameters Type Name Description String path A path. Returns Type Description Boolean A boolean. | Improve this Doc View Source Open(String) Open a file. Declaration public Stream Open(string path) Parameters Type Name Description String path A path. Returns Type Description Stream A stream. | Improve this Doc View Source Write(String, Stream) Write a file. Declaration public void Write(string path, Stream data) Parameters Type Name Description String path A path. Stream data The data. | Improve this Doc View Source WriteAll(IFileLocator) Write the files from a file locator. Declaration public void WriteAll(IFileLocator locator) Parameters Type Name Description IFileLocator locator A file locator. | Improve this Doc View Source WriteAll(IFileLocator, String) Write the files from a file locator. Declaration public void WriteAll(IFileLocator locator, string root) Parameters Type Name Description IFileLocator locator A file locator. String root The root path. Implements IFileLocator IWritableFileLocator System.IDisposable"
  },
  "api/JeremyAnsel.IO.Locator.IWritableFileLocator.html": {
    "href": "api/JeremyAnsel.IO.Locator.IWritableFileLocator.html",
    "title": "Interface IWritableFileLocator",
    "keywords": "Interface IWritableFileLocator The writable file locator interface. Inherited Members IDisposable.Dispose() Namespace : JeremyAnsel.IO.Locator Assembly : JeremyAnsel.IO.Locator.dll Syntax public interface IWritableFileLocator : IDisposable Methods | Improve this Doc View Source Create(String) Create a file. Declaration void Create(string path) Parameters Type Name Description String path A path. | Improve this Doc View Source Write(String, Stream) Write a file. Declaration void Write(string path, Stream data) Parameters Type Name Description String path A path. Stream data The data. | Improve this Doc View Source WriteAll(IFileLocator) Write the files from a file locator. Declaration void WriteAll(IFileLocator locator) Parameters Type Name Description IFileLocator locator A file locator. | Improve this Doc View Source WriteAll(IFileLocator, String) Write the files from a file locator. Declaration void WriteAll(IFileLocator locator, string root) Parameters Type Name Description IFileLocator locator A file locator. String root The root path."
  },
  "api/JeremyAnsel.IO.Locator.WritableFileLocatorFactory.html": {
    "href": "api/JeremyAnsel.IO.Locator.WritableFileLocatorFactory.html",
    "title": "Class WritableFileLocatorFactory",
    "keywords": "Class WritableFileLocatorFactory A factory to create a writable file locator. The supported formats are: file system, Zip, Tar, GZip. Inheritance Object WritableFileLocatorFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.IO.Locator Assembly : JeremyAnsel.IO.Locator.dll Syntax public static class WritableFileLocatorFactory Methods | Improve this Doc View Source Create(String) Creates a writable file locator. Declaration public static IWritableFileLocator Create(string root) Parameters Type Name Description String root The root path. Returns Type Description IWritableFileLocator A writable file locator. | Improve this Doc View Source CreateArchive(Stream, ArchiveType) Creates a writable file locator for an archive from a stream. Declaration public static IWritableFileLocator CreateArchive(Stream root, ArchiveType archiveType) Parameters Type Name Description Stream root A stream. SharpCompress.Common.ArchiveType archiveType The archive type. Returns Type Description IWritableFileLocator A writable file locator. | Improve this Doc View Source CreateArchive(Stream, ArchiveType, CompressionType) Creates a writable file locator for an archive from a stream. Declaration public static IWritableFileLocator CreateArchive(Stream root, ArchiveType archiveType, CompressionType compressionType) Parameters Type Name Description Stream root A stream SharpCompress.Common.ArchiveType archiveType The archive type. SharpCompress.Common.CompressionType compressionType The compression type. Returns Type Description IWritableFileLocator A writable file locator. | Improve this Doc View Source CreateArchive(String, ArchiveType) Creates a writable file locator for an archive. Declaration public static IWritableFileLocator CreateArchive(string root, ArchiveType archiveType) Parameters Type Name Description String root The root path. SharpCompress.Common.ArchiveType archiveType The archive type. Returns Type Description IWritableFileLocator A writable file locator. | Improve this Doc View Source CreateArchive(String, ArchiveType, CompressionType) Creates a writable file locator for an archive. Declaration public static IWritableFileLocator CreateArchive(string root, ArchiveType archiveType, CompressionType compressionType) Parameters Type Name Description String root The root path. SharpCompress.Common.ArchiveType archiveType The archive type. SharpCompress.Common.CompressionType compressionType The compression type. Returns Type Description IWritableFileLocator A writable file locator."
  }
}